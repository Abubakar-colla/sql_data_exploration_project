-- Explore All Objects In the Database

SELECT * FROM INFORMATION_SCHEMA.TABLES



-- Explore All Columns in the DATABASE

SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE COLUMN_NAME = 'country'

-- Explore All Countries our customers come from.

SELECT DISTINCT country from gold.dim_customers

-- Explore All Categories, subcategories our customers come from.

SELECT DISTINCT category, subcategory, product_name from gold.dim_products
order by 1,2,3

-- find the date of the first and last order


select min(order_date) first_order_date,
max(order_date) last_order_date,
DATEDIFF(YEAR, min(order_date), max(order_date)) as order_range_Date
from gold.fact_sales

select min(order_date) first_order_date,
max(order_date) last_order_date,
DATEDIFF(MONTH, min(order_date), max(order_date)) as order_range_Date
from gold.fact_sales

-- find the youngest and oldest customer

select min(birthdate), max(birthdate) from
gold.dim_customers;

select min(birthdate) as oldest_customer, 
       max(birthdate) as youngest_customer,
	   DATEDIFF(year, min(birthdate), GETDATE()) as cust_age_old,
	   DATEDIFF(year, max(birthdate), GETDATE()) as cust_age_young
from gold.dim_customers;


-- Measure

-- find the total sales

SELECT SUM(sales_amount) from gold.fact_sales;

-- find how many items are sold

SELECT COUNT(quantity) from gold.fact_sales;

-- find the average selling price

SELECT AVG(price) from gold.fact_sales;

-- find the total number of orders

SELECT COUNT(order_number) from gold.fact_sales;


-- find the total number of products

SELECT count(DISTINCT product_name) from gold.dim_products;

-- find the total number of customers

SELECT COUNT(customer_id) from gold.dim_customers;


-- find the total number of customers that has place an orders

SELECT COUNT(distinct order_number) from gold.fact_sales;


SELECT * FROM gold.fact_sales;

--- Generate report ---------------------------------------

SELECT 'Total Sales' as measure_name, SUM(sales_amount) as measure_value from gold.fact_sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) from gold.fact_sales
UNION ALL
SELECT 'Average Price', AVG(price) from gold.fact_sales
UNION ALL
SELECT 'Total Nr. Orders', COUNT(order_number) from gold.fact_sales
UNION ALL
SELECT 'Total Nr. Products', count(DISTINCT product_name) from gold.dim_products
UNION ALL
SELECT 'Total Nr. Customers', COUNT(customer_id) from gold.dim_customers
UNION ALL
SELECT 'Total Nr. Placed Orders', COUNT(distinct order_number) from gold.fact_sales

-- magnitude


-- find the total customers by country
select country,
       count(customer_key) as total_customers
	   from gold.dim_customers
	   group by country
	   order by total_customers desc;

-- find total customers by gender

SELECT gender, count(customer_id) as 'Total Customers'
FROM gold.dim_customers
group by gender
order by [Total Customers] desc


-- find total product by category

select category, count(product_name) 'Total Product'
from gold.dim_products
group by category
order by [Total Product] desc

-- what is the average costs in each category?

select category, AVG(cost) as 'Average_Cost'
from gold.dim_products
group by category
order by Average_Cost desc;

-- what is the total revenue generated for each category?

select category, sum(sales_amount) as 'total_rev' from gold.fact_sales as f inner join gold.dim_products as p
on p.product_key = f.product_key
group by category
order by total_rev desc;

-- what is the total revenue generated by each customer?

select c.customer_key, 
       c.first_name, 
	   c.last_name, 
	   sum(f.sales_amount) as 'total_rev' 
from gold.fact_sales as f inner join gold.dim_customers as c
on c.customer_key = f.customer_key
group by 
c.customer_key,
c.first_name, 
c.last_name
order by total_rev desc

select* from gold.fact_sales as f inner join gold.dim_customers as c
on c.customer_key = f.customer_key

-- what is the distribution of sold items by countries?
select c.country, 
	   sum(f.quantity) as 'total_qty' 
from gold.fact_sales as f inner join gold.dim_customers as c
on c.customer_key = f.customer_key
group by c.country
order by total_qty desc

-- Ranking

-- which 5 products generate the highest revenue?

select top 5 p.product_name, 
sum(f.sales_amount) as highest_rev
from gold.fact_sales as f inner join gold.dim_products as p
on p.product_key = f.product_key
group by p.product_name
order by highest_rev desc

-- what are the 5 worst-performing products in terms of sales?

select top 5 p.product_name, 
sum(f.sales_amount) as highest_rev
from gold.fact_sales as f inner join gold.dim_products as p
on p.product_key = f.product_key
group by p.product_name
order by highest_rev 

select * from 
(select p.product_name, 
sum(f.sales_amount) as highest_rev,
row_number() over(order by sum(f.sales_amount) desc) as rank_products
from gold.fact_sales as f inner join gold.dim_products as p
on p.product_key = f.product_key
group by p.product_name)t
where rank_products <= 5
